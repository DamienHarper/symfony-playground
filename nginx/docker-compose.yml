version: '3'

services:

  # MySQL container based on latest official docker image
  # VOLUME /var/lib/mysql
  db:
    container_name: app_db
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - db_data:/var/lib/mysql
    networks:
      app_lan :
        aliases:
          - app.db

  # PHP-FPM container based on latest official docker image
  # https://hub.docker.com/_/php/
  php:
    container_name: app_php
    build: docker/php-fpm/
    volumes:
      - app_data:${APP_CONTAINER_PATH}:nocopy
      - ./docker/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
    links:
      - redis
      - db
    depends_on:
      - db
      - redis
    networks:
      app_lan :
        aliases:
          - app.fpm

#  # PHP-CLI container based on latest official docker image
#  # https://hub.docker.com/_/php/
#  php-worker:
#    container_name: app_php
#    build: docker/php-cli/
#    volumes:
#      - app_data:${APP_CONTAINER_PATH}
#      - ./docker/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
#    links:
#      - redis
#      - db
#    depends_on:
#      - db
#      - redis
#    networks:
#      app_lan :
#        aliases:
#          - app.php
#    command: 'bin/console ...'

  # Nginx container based on latest official docker image
  # https://hub.docker.com/_/nginx/
  nginx:
    container_name: app_nginx
    image: nginx:latest
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - nginx_data:/var/log/nginx
      - app_data:${APP_CONTAINER_PATH}:nocopy
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    links:
      - php
    depends_on:
      - php
    networks:
      app_lan :
        aliases:
          - app.nginx

  # Redis container based on latest official docker image
  # https://hub.docker.com/_/redis/
  # VOLUME /data
  redis:
    container_name: app_redis
    image: redis:latest
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_data:/data
    #   - /path/to/redis.conf
    networks:
      app_lan :
        aliases:
          - app.redis

#  # RabbitMQ container based on latest official docker image
#  # https://hub.docker.com/_/rabbitmq/
#  # VOLUME /var/lib/rabbitmq
#  rabbitmq:
#    container_name: app_rabbitmq
#    image: rabbitmq:latest

  # Varnish container based on latest million12 image
  # https://hub.docker.com/r/million12/varnish/
  varnish:
    container_name: app_varnish
    image: million12/varnish
    environment:
      VCL_CONFIG: ${VARNISH_VCL_PATH}
      CACHE_SIZE: ${VARNISH_CACHE_SIZE}
      VARNISHD_PARAMS: ${VARNISH_DAEMON_PARAMS}
    ports:
      - ${VARNISH_PORT}:80
    volumes:
      - ./docker/varnish/default.vcl:/etc/varnish/default.vcl
    links:
      - nginx
    depends_on:
      - nginx
    networks:
      app_lan :
        aliases:
          - app.varnish

  # ELK stack container
  # https://hub.docker.com/r/sebp/elk/
  # VOLUME /var/lib/elasticsearch
  elk:
    container_name: app_elk
    image: sebp/elk:latest
    ports:
      - ${ELK_KIBANA_PORT}:5601
      - ${ELK_ES_PORT}:9200
      - ${ELK_LOGSTASH_PORT}:5044
    volumes:
      - elk_data:/var/lib/elasticsearch
      - app_data:${APP_CONTAINER_PATH}:nocopy
      - nginx_data:/var/log/nginx
      - ./docker/elk/logstash/conf.d:/etc/logstash/conf.d
      - ./docker/elk/logstash/patterns:/etc/logstash/logstash/patterns
    depends_on:
      - varnish
    networks:
      app_lan :
        aliases:
          - app.elk

networks:
  app_lan :

volumes:
  app_data:
    external: 
      name: app_sync
  db_data:
  nginx_data:
  elk_data:
  redis_data: