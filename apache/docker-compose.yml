version: '3'

services:

  # MySQL container based on latest official docker image
  # VOLUME /var/lib/mysql
  db:
    container_name: app_db
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - db_data:/var/lib/mysql
    networks:
      app_lan :
        aliases:
          - app.db

  # PHP/Apache container based on latest official docker image
  # https://hub.docker.com/_/php/
  # single app container
  web:
    container_name: app_web
    build: docker/php/
    environment:
      APP_NAME: ${APP_NAME}
    volumes:
      - app_data:${APP_CONTAINER_PATH}:nocopy
      - ./docker/php/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
      - ./docker/apache/default-single.conf:/etc/apache2/sites-enabled/000-default.conf
    links:
      - redis
      - rabbitmq
      - db
    depends_on:
      - db
      - redis
      - rabbitmq
    networks:
      app_lan :
        aliases:
          - app.web

  # PHP/Apache container based on latest official docker image
  # https://hub.docker.com/_/php/
  # multi app container
  web-multi:
    container_name: multi_app_web
    build: docker/php/
    volumes:
      - app1_data:${APP1_CONTAINER_PATH}:nocopy
      - app2_data:${APP2_CONTAINER_PATH}:nocopy
      - ./docker/php/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
      - ./docker/apache/default-multi.conf:/etc/apache2/sites-enabled/000-default.conf
    links:
      - redis
      - rabbitmq
      - db
    depends_on:
      - db
      - redis
      - rabbitmq
    networks:
      app_lan :
        aliases:
          - app.web.multi

#  # PHP cli container based on latest official docker image
#  # https://hub.docker.com/_/php/
#  worker:
#    container_name: app_worker
#    image: php:cli
#    volumes:
#      - app_data:${APP_CONTAINER_PATH}
##      - ./docker/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
#    links:
#      - redis
#      - rabbitmq
#      - db
#    depends_on:
#      - db
#      - redis
#      - rabbitmq
#    networks:
#      app_lan :
#        aliases:
#          - app.worker
##      command: 'bin/console ...'

  # Redis container based on latest official docker image
  # https://hub.docker.com/_/redis/
  # VOLUME /data
  redis:
    container_name: app_redis
    image: redis:alpine
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_data:/data
    networks:
      app_lan :
        aliases:
          - app.redis

  # RabbitMQ container based on latest official docker image
  # https://hub.docker.com/_/rabbitmq/
  # VOLUME /var/lib/rabbitmq
  rabbitmq:
    container_name: app_rabbitmq
    image: rabbitmq:alpine
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      app_lan :
        aliases:
          - app.rabbitmq

  # Varnish container based on latest million12 image
  # https://hub.docker.com/r/million12/varnish/
  varnish:
    container_name: app_varnish
    image: million12/varnish
    environment:
      VCL_CONFIG: ${VARNISH_VCL_PATH}
      CACHE_SIZE: ${VARNISH_CACHE_SIZE}
      VARNISHD_PARAMS: ${VARNISH_DAEMON_PARAMS}
    ports:
      - ${VARNISH_PORT}:80
    volumes:
      - ./docker/varnish/default.vcl:/etc/varnish/default.vcl
    links:
      - web
      - web-multi
    depends_on:
      - web
      - web-multi
    networks:
      app_lan :
        aliases:
          - app.varnish

  # ELK stack container
  # https://hub.docker.com/r/sebp/elk/
  # VOLUME /var/lib/elasticsearch
  elk:
    container_name: app_elk
    image: sebp/elk:latest
    ports:
      - ${ELK_KIBANA_PORT}:5601
      - ${ELK_ES_PORT}:9200
      - ${ELK_LOGSTASH_PORT}:5044
    volumes:
      - elk_data:/var/lib/elasticsearch
      - app_data:${APP_CONTAINER_PATH}:nocopy
      - app1_data:${APP1_CONTAINER_PATH}:nocopy
      - app2_data:${APP2_CONTAINER_PATH}:nocopy
#      - nginx_data:/var/log/apache2
      - ./docker/elk/logstash/conf.d:/etc/logstash/conf.d
      - ./docker/elk/logstash/patterns:/etc/logstash/logstash/patterns
    depends_on:
      - varnish
    networks:
      app_lan :
        aliases:
          - app.elk

networks:
  app_lan :

volumes:
  app_data:
    external: 
      name: app_sync
  app1_data:
    external: 
      name: app1_sync
  app2_data:
    external: 
      name: app2_sync
  db_data:
    external: 
      name: db_sync
  redis_data:
    external: 
      name: redis_sync
  rabbitmq_data:
    external: 
      name: rabbitmq_sync
  elk_data:
